{"version":3,"sources":["GalleryApi.js","index.js"],"names":["GalleryApi","URL","request","url","method","body","fetch","JSON","stringify","undefined","headers","Content-type","then","response","ok","json","Error","cause","getList","catch","getPhotos","albumId","PHOTOS_SELECTOR","ALBUM_LINKS_SELECTOR","ALBUM_LINK_SELECTOR","FIRST_ALBUM_INDEX","containerForAlbums","document","querySelector","containerForPhotos","onContainerForAlbumsClick","e","id","target","closest","dataset","getAlbumPhotos","init","albums","renderAlbumLinks","showError","html","map","generateAlbumLinkHTML","join","innerHTML","album","title","renderPhotos","photos","generatePhotoHTML","photo","thumbnailUrl","error","alert","message","console","log","addEventListener","this","bind"],"mappings":"MAAAA,WACAC,WAAA,wCAEAC,eAAAC,EAAA,GAAAC,EAAA,MAAAC,GACA,OAAAC,MAAAN,WAAAC,IAAAE,EAAA,CACAC,OAAAA,EACAC,KAAAA,EAAAE,KAAAC,UAAAH,CAAA,EAAAI,KAAAA,EACAC,QAAA,CACAC,eAAA,kBACA,CACA,CAAA,EACAC,KAAAC,IACA,GAAAA,EAAAC,GACA,OAAAD,EAAAE,KAAA,EAGA,MAAA,IAAAC,MAAA,+BAAA,CAAAC,MAAAJ,CAAA,CAAA,CACA,CAAA,CACA,CAEAK,iBACA,OAAAlB,WACAE,QAAA,QAAA,EACAiB,MAAA,KACA,MAAA,IAAAH,MAAA,kCAAA,CACA,CAAA,CACA,CAEAI,iBAAAC,GACA,OAAArB,WACAE,QAAA,kBAAAmB,CAAA,EACAF,MAAA,KACA,MAAA,IAAAH,MAAA,4BAAA,CACA,CAAA,CACA,CACA,CCnCA,MAAAM,gBAAA,UACAC,qBAAA,0BACAC,oBAAA,aACAC,kBAAA,EAEAC,mBAAAC,SAAAC,cAAAL,oBAAA,EACAM,mBAAAF,SAAAC,cAAAN,eAAA,EAOA,SAAAQ,0BAAAC,GAEAC,EADAD,EAAAE,OAAAC,QAAAV,mBAAA,EACAW,QAAAH,GAEAA,GACAI,eAAAJ,CAAA,CAEA,CAEA,SAAAK,OACArC,WAAAkB,QAAA,EACAN,KAAA,IACA,IAAAS,EAAAiB,EAAAb,mBAAAO,GAEAO,iBAAAD,CAAA,EACAF,eAAAf,CAAA,CACA,CAAA,EACAF,MAAAqB,SAAA,CACA,CAEA,SAAAD,iBAAAD,GACAG,EAAAH,EAAAI,IAAAC,qBAAA,EAAAC,KAAA,EAAA,EAEAlB,mBAAAmB,UAAAJ,CACA,CAEA,SAAAE,sBAAAG,GACA;sCACAA,EAAAd;gCACAc,EAAAC;;GAGA,CAEA,SAAAX,eAAAf,GACArB,WAAAoB,UAAAC,CAAA,EACAT,KAAAoC,YAAA,EACA7B,MAAAqB,SAAA,CACA,CAEA,SAAAQ,aAAAC,GACAR,EAAAQ,EAAAP,IAAAQ,iBAAA,EAAAN,KAAA,EAAA,EAEAf,mBAAAgB,UAAAJ,CACA,CAEA,SAAAS,kBAAAC,GACA,kBAAAA,EAAAC,gBACA,CAEA,SAAAZ,UAAAa,GACAC,MAAAD,EAAAE,OAAA,CACA,CA1DAC,QAAAC,IAAA/B,kBAAA,EACAA,mBAAAgC,iBAAA,QAAAC,KAAA7B,0BAAA8B,KAAAD,IAAA,CAAA,EACAtB,KAAA,EACAmB,QAAAC,IAAA,QAAA","file":"all.js","sourcesContent":["class GalleryApi {\r\n    static URL = 'https://jsonplaceholder.typicode.com/';\r\n\r\n    static request(url = '', method = 'GET', body) {\r\n        return fetch(GalleryApi.URL + url, {\r\n            method,\r\n            body: body ? JSON.stringify(body) : undefined,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            }\r\n        })\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                }\r\n\r\n                throw new Error('Canot execute request method', {cause: response});\r\n            })\r\n    }\r\n\r\n    static getList() {\r\n        return GalleryApi\r\n            .request('albums')\r\n            .catch(() => {\r\n                throw new Error(\"Can not get list of album links!\");\r\n            });\r\n    }\r\n\r\n    static getPhotos(albumId) {\r\n        return GalleryApi\r\n            .request('photos?albumId=' + albumId)\r\n            .catch(() => {\r\n                throw new Error(\"Can not get album photos!!\");\r\n            });\r\n    }\r\n}","const PHOTOS_SELECTOR = \".photos\";\r\nconst ALBUM_LINKS_SELECTOR = \"#containerForAlbumLinks\";\r\nconst ALBUM_LINK_SELECTOR = \".albumLink\";\r\nconst FIRST_ALBUM_INDEX = 0;\r\n\r\nconst containerForAlbums = document.querySelector(ALBUM_LINKS_SELECTOR);\r\nconst containerForPhotos = document.querySelector(PHOTOS_SELECTOR);\r\nconsole.log(containerForAlbums)\r\ncontainerForAlbums.addEventListener(\"click\", this.onContainerForAlbumsClick.bind(this));\r\ninit();\r\nconsole.log('ddddfd');\r\n\r\n\r\nfunction onContainerForAlbumsClick(e) {\r\n    const albumLink = e.target.closest(ALBUM_LINK_SELECTOR);\r\n    let id = albumLink.dataset.id;\r\n\r\n    if (id) {\r\n        getAlbumPhotos(id);\r\n    }\r\n}\r\n\r\nfunction init() {\r\n    GalleryApi.getList()\r\n        .then((albums) => {\r\n            const albumId = albums[FIRST_ALBUM_INDEX].id;\r\n\r\n            renderAlbumLinks(albums)\r\n            getAlbumPhotos(albumId);\r\n        })\r\n        .catch(showError);\r\n}\r\n\r\nfunction renderAlbumLinks(albums) {\r\n    const html = albums.map(generateAlbumLinkHTML).join('');\r\n\r\n    containerForAlbums.innerHTML = html;\r\n}\r\n\r\nfunction generateAlbumLinkHTML(album) {\r\n    return `\r\n    <div class=\"albumLink\" data-id=\"${album.id}\">\r\n        <a href=\"#\" id=\"link\">${album.title}</a>\r\n    </div>\r\n  `;\r\n}\r\n\r\nfunction getAlbumPhotos(albumId) {\r\n    GalleryApi.getPhotos(albumId)\r\n        .then(renderPhotos)\r\n        .catch(showError);\r\n}\r\n\r\nfunction renderPhotos(photos) {\r\n    const html = photos.map(generatePhotoHTML).join('');\r\n\r\n    containerForPhotos.innerHTML = html;\r\n}\r\n\r\nfunction generatePhotoHTML(photo) {\r\n    return `<img src=${photo.thumbnailUrl}/>`;\r\n}\r\n\r\nfunction showError(error) {\r\n    alert(error.message);\r\n}"]}